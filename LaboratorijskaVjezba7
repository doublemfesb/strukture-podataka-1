/*
Napisati program koji iz datoteke čita postfiks izraz i zatim korištenjem stoga računa
rezultat. Stog je potrebno realizirati preko vezane liste.
*/
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define PRAZNO -3
#define OKEJ 0
#define BUFFER 1024
#define ERROR (-1)
#define NEOTVARA (-2)
typedef struct cvor* stog;
struct cvor
{
	int el;
	stog next;
};
bool DaLiJeBroj(char*,int*);
int push(stog,int);
int pop(stog);
int UcitavanjeIzDatoteke(stog);
int main()
{
	int rezultat;
	struct cvor St;
	St.next = NULL;
	rezultat = UcitavanjeIzDatoteke(&St);
	if (rezultat == -1)
	{
		printf("greska pri alokaciji");
		return ERROR;
	}
	else if (rezultat == -2)
	{
		printf("Datoteka se ne moze otvoriti");
		return NEOTVARA;
	}
	else if (rezultat== -3)
	{
		printf("Stog je prazan ne moze se skidat sa praznog stoga");
		return PRAZNO;
	}
	else
	{
		printf("Rezultat je: %d", rezultat);
	}
	return 0;
}
int UcitavanjeIzDatoteke(stog S)
{
	int a, b;
	int z, broj;
	int succ, rez;
	char* str;
	char* fileName;
	FILE* fp = NULL;
	
	fileName = (char*)malloc(BUFFER * sizeof(char));
	if (fileName == NULL)
		return ERROR;

	str = (char*)malloc(BUFFER * sizeof(char));
	if (str == NULL)
		return ERROR;

	printf("Unesite ime datoteke\n");
	scanf("%s", fileName);
	strcat(fileName, ".txt");

	fp = fopen(fileName, "r");
	if (fp == NULL)
		return NEOTVARA;

	while (!feof(fp))
	{

		fscanf(fp, "%s", str);
		z = DaLiJeBroj(str, &broj);
		if (z == 1)
		{
			succ = push(S, broj);
			if (succ == -1)
				return ERROR;
		}
		else
		{
			a = pop(S);
			if (a == NULL)
				return NULL;
			b = pop(S);
			if (b == NULL)
				return NULL;
			if (strcmp(str, "+")==0)
			{
				succ = push(S, a + b);
				if (succ == -1)
					return ERROR;
			}
			else if (strcmp(str, "-")==0)
			{
				succ = push(S, a - b);
				if (succ == -1)
					return ERROR;
			}
			else if (strcmp(str, "*")==0)
			{
				succ = push(S, a * b);
				if (succ == -1)
					return ERROR;
			}
		}
	}
	rez = pop(S);
	fclose(fp);
	return rez;
}
bool DaLiJeBroj(char* x, int* a)
{
	int y;
	y = sscanf(x, "%d", a);
	return (y == 0 || y == EOF || y != 1) ? 0 : 1;
}

int push(stog S, int x)
{
	printf("%d\n", x);
	stog q;
	q = (stog)malloc(sizeof(struct cvor));
	if (q == NULL)
		return ERROR;
	q->el = x;
	q->next = S->next;
	S->next = q;
	return OKEJ;
}
int pop(stog S)
{
	int x;
	stog temp;
	if (S != NULL)
	{
		if (S->next != NULL)
		{
			temp = S->next;
			S->next = temp->next;
			x = temp->el;
			free(temp);
		}
		else return PRAZNO;

	}
	return x;
	

}
