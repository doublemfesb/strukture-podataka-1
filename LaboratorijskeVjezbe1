/***
Napisati program koji prvo pro훾ita koliko redaka ima datoteka, tj. koliko ima studenata zapisanih u datoteci. Nakon toga potrebno je 
dinami훾ki alocirati prostor za niz struktura studenata (ime, prezime, bodovi) i u훾itati iz datoteke sve zapise. Na ekran ispisati ime,
prezime,apsolutni i relativni broj bodova. Napomena: Svaki redak datoteke sadr탑i ime i prezime studenta, te broj bodova na kolokviju. 
relatvan_br_bodova = br_bodova/max_br_bodova*100
***/

#define _CRT_SECURE_NO_WARNINGS 
#define ERROR_FILE_NULL (-1)
#define ERROR_FILE_EMPTY_STRING (-2)
#define ERROR_FILE_DIDNT_OPEN (-3)
#define BUFFER (1024)
#define MAX_LINE_SIZE 128
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct student {
	int br;
	char ime[128];
	char prez[128];
};

void ispis(struct student*);
int brojStudenata(FILE*);
void ucitavanje(struct student*, FILE*);

int countStudentsFromFile(const char *fileName)
{
	int count = 0;
	FILE *fp = NULL;
	char line[MAX_LINE_SIZE] = { 0 };

	if (fileName == NULL)
	{
		printf("File name cannot be NULL!\r\n");
		return ERROR_FILE_NULL;
	}

	if (strlen(fileName) == 0)
	{
		printf("File name cannot be empty string!\r\n");
		return ERROR_FILE_EMPTY_STRING;
	}

	fp = fopen(fileName, "r");

	if (fp==NULL)
	{
		printf("Datoteka %s nije otvorena\r\n", fileName);
		return ERROR_FILE_DIDNT_OPEN;
	}

	while (!feof(fp))
	{
		fgets(line, MAX_LINE_SIZE, fp);

		if (strlen(line) == 0)
		{
			continue;
		}

		count++;
	}

	fclose(fp);
	return count;
}

int main() {
	float *rl;
	struct student *stud;
	const char *fp;
	int br = 0, i;
	fp = fopen("studenti.txt", "r");
	br = countStudentsFromFile("studenti.txt");
	if(br==-1 || br==-2 || br==-3)
	    return br;
	printf("broj studeneta:%d\n", br);
	stud = (struct student*)malloc(br * sizeof(struct student));
	rewind(fp);

	for (i = 0; i<br; i++) {
		ucitavanje(stud + i, fp);
	}
	for (i = 0; i<br; i++) {
		ispis(stud + i);
	}
	fclose(fp);
	return 0;
}

int brojStudenata(FILE *fp)
{
	int br = 0;
	while (!feof(fp))
		if (fgetc(fp) == '\n') br++;
	return br;
}

void ucitavanje(struct student*stud, FILE *fp){
	fscanf(fp, "%d \t%s\t %s", &stud->br, stud->ime, stud->prez);
}

void ispis(struct student*stud)
{
	printf("%d \t%s\t %s \t %.2f\n", stud->br, stud->ime, stud->prez, ((float)stud->br / 50.0)*100.0);
}

