/*
Napisati program za zbrajanje i množenje polinoma. Koeficijenti i eksponenti se
čitaju iz datoteke.
Napomena: Eksponenti u datoteci nisu nužno sortirani.
*/
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define OKEJ (0)
#define NEOTVARA (-2)
#define ERROR (-1)
#define BUFFER 1024
typedef struct polinom* cvor;
struct polinom
{
	int pot;
	int koef;
	cvor next;
};
int Zbroji(cvor, cvor, cvor);
void Ispis(cvor);
int SortUnos(cvor, int, int);
int Pomnozi(cvor,cvor,cvor);
int UcitajIzDatoteke(cvor);
int main()
{
	int succ;
	struct polinom pol1;
	struct polinom pol2;
	struct polinom pol3;
	struct polinom pol4;
	pol4.next = NULL;
	pol3.next = NULL;
	pol1.next = NULL;
	pol2.next = NULL;
	
	succ = UcitajIzDatoteke(&pol1);
	if (succ == -1)
	{
		printf("Greska pri alokaciji");
		return ERROR;
	}
	if (succ == -2)
	{
		printf("Datoteka se ne otvara");
		return NEOTVARA;
	}
	succ = UcitajIzDatoteke(&pol2);
	if (succ == -1)
	{
		printf("Greska pri alokaciji");
		return ERROR;
	}
	if (succ == -2)
	{
		printf("Datoteka se ne otvara");
		return NEOTVARA;
	}
	printf("Ispis prve datoteke\n");
	Ispis(pol1.next);
	printf("\nIspis druge datoteke\n");
	Ispis(pol2.next);
	succ = Zbroji(pol1.next,pol2.next,&pol4);
	printf("\nZbrojeno:\n");
	Ispis(pol4.next);
	succ = Pomnozi(&pol1, &pol2, &pol3);
	printf("\nPomnozeni polinomi\n");
	Ispis(pol3.next);
	return 0;
}
int UcitajIzDatoteke(cvor S)
{
	FILE* fp = NULL;
	char* fileName = NULL;
	fileName = (char*)malloc(BUFFER * sizeof(char));
	if (fileName == NULL)
		return ERROR;

	printf("Unesite ime datoteke");
	scanf("%s", fileName);
	strcat(fileName, ".txt");

	fp = fopen(fileName, "r");
	if (fp == NULL)
		return NEOTVARA;
	while (!feof(fp))
	{
		int y;
		int a, b;
		fscanf(fp, "%d %d", &a, &b);
		y = SortUnos(S, a, b);
	}
	fclose(fp);
	return OKEJ;
}
int SortUnos(cvor S, int k, int p)
{
	while (S->next != NULL && S->next->pot > p)
		S = S->next;
	if (S->next != NULL && S->next->pot == p)
		S->next->koef += k;
	else
	{
		cvor q;
		q = (cvor)malloc(sizeof(struct polinom));
		if (q == NULL)
			return ERROR;
		q->koef = k;
		q->pot = p;
		q->next = S->next;
		S->next = q;
	}
	return OKEJ;
}
int Pomnozi(cvor S,cvor P,cvor C)
{
	int x;
	S = S->next;
	P = P->next;
	cvor pocetak = P;
	while (S != NULL)
	{
		while (P != NULL)
		{
			x=SortUnos(C, P->koef * S->koef, P->pot + S->pot);
			if (x == -1)
				return -1;
			P = P->next;
		}
		S = S->next;
		P = pocetak;
	}
	return OKEJ;

}
int Zbroji(cvor S, cvor P, cvor C)
{
	cvor temp;
	int x;
	while (S != NULL && P != NULL)
	{
		if (S->pot == P->pot) {
			x = SortUnos(C, S->koef + P->koef, S->pot);
			if (x == -1)
				return -1;
			S = S->next;
			P = P->next;
		}
		else if (S->pot > P->pot)
		{
			x = SortUnos(C, S->koef, S->pot);
			if (x == -1)
				return -1;
			S = S->next;

		}
		else
		{
			x = SortUnos(C, P->koef, P->pot);
			if (x == -1)
				return -1;

			P = P->next;
		}
	}
	if (S != NULL)
		temp = S;
	else temp = P;
	while (temp != NULL) {
		SortUnos(C, temp->koef, temp->pot);
		temp = temp->next;
	}
	if (NULL == S) return NULL;
	return OKEJ;
}
void Ispis(cvor S)
{
	while (S != NULL)
	{
		printf("%d %d\n", S->koef, S->pot);
		S = S->next;
	}

}
